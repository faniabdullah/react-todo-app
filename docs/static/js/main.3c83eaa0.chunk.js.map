{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","completeTodo","removeTodo","className","style","textDecoration","isCompleted","text","onClick","TodoForm","addTodo","React","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","App","todos","setTodos","newTodos","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAIA,SAASA,EAAT,GAA6D,IAA7CC,EAA4C,EAA5CA,KAAOC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,aAAgBC,EAAc,EAAdA,WAC5C,OACE,sBAAKC,UAAU,OACfC,MAAO,CAAEC,eAAgBN,EAAKO,YAAc,eAAiB,IAD7D,UAGGP,EAAKQ,KACN,gCACE,wBAAQC,QAAS,kBAAMP,EAAaD,IAApC,sBACA,wBAAQQ,QAAS,kBAAMN,EAAWF,IAAlC,qBAMR,SAASS,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAAW,EACHC,IAAMC,SAAS,IADZ,mBACtBC,EADsB,KACfC,EADe,KAU7B,OACE,sBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACGJ,IACLH,EAAQG,GACRC,EAAS,MAIT,SACE,uBACEI,KAAK,OACLf,UAAU,QACVU,MAAOA,EACPM,SAAU,SAAAH,GAAC,OAAIF,EAASE,EAAEI,OAAOP,YA0D1BQ,MAnDf,WAAgB,IAAD,EACaV,IAAMC,SAAS,CACvC,CACEL,KAAM,oBACND,aAAa,GAEf,CACEC,KAAM,wBACND,aAAa,GAEf,CACEC,KAAM,6BACND,aAAa,KAZJ,mBACNgB,EADM,KACCC,EADD,KAqBPtB,EAAe,SAAAD,GACnB,IAAMwB,EAAQ,YAAOF,GACrBE,EAASxB,GAAOM,aAAc,EAC9BiB,EAASC,IAGLtB,EAAa,SAAAF,GACjB,IAAMwB,EAAQ,YAAOF,GACrBE,EAASC,OAAOzB,EAAO,GACvBuB,EAASC,IAGX,OACE,qBAAKrB,UAAU,MAAf,SACA,sBAAKA,UAAU,YAAf,UACGmB,EAAMI,KAAI,SAAC3B,EAAMC,GAAP,OACT,cAACF,EAAD,CAEEE,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,GAJPF,MAOR,cAACS,EAAD,CAAUC,QA7BC,SAAAH,GACd,IAAMiB,EAAQ,sBAAOF,GAAP,CAAc,CAAEf,UAC9BgB,EAASC,YC/CEG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c83eaa0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nfunction Todo({ todo , index, completeTodo ,  removeTodo }) {\n  return (\n    <div className=\"todo\"\n    style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index)}>Complete</button>\n        <button onClick={() => removeTodo(index)}>x</button>\n      </div>\n    </div>\n  );\n};\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n    <div className=\"todo-list\">\n      {todos.map((todo, index) => (\n        <Todo\n          key={index}\n          index={index}\n          todo={todo}\n          completeTodo={completeTodo}\n          removeTodo={removeTodo}\n        />\n      ))}\n       <TodoForm addTodo={addTodo} />\n    </div>\n  </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}